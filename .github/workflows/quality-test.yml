name: 🧪 Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_ENV: test
  V0_API_KEY: ${{ secrets.V0_API_KEY }}
  DEBUG: true

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      # ─────────────────────────────────────────────
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      # ─────────────────────────────────────────────
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }} # 🚫 SIN cache

      # ─────────────────────────────────────────────
      - name: 📥 Install dependencies
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ] || [ -f yarn.lock ]; then
            echo "🟢 Lockfile encontrado → npm ci"
            npm ci
          else
            echo "🟡 Sin lockfile → npm install"
            npm install --no-fund --no-audit
          fi

      # ─────────────────────────────────────────────
      - name: 🔍 Type check
        run: npm run type-check

      - name: 🛡️ Security check
        run: npm run security-check

      - name: 🧪 Run tests
        run: npm run test:run

      - name: 📊 Generate coverage report
        run: npm run test:coverage

      # Para evitar duplicados, subimos cobertura solo desde Node 20
      - name: 📈 Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      # ─────────────────────────────────────────────
      - name: 🏗️ Build project
        run: npm run build

      - name: ✅ Verify build artifacts
        run: |
          if [ ! -f "dist/index.js" ]; then
            echo "❌ Build failed: dist/index.js not found"
            exit 1
          else
            echo "✅ Build successful: dist/index.js created"
          fi
