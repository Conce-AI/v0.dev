name: 🚀 Quality Quest

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_ENV: test
  V0_API_KEY: ${{ secrets.V0_API_KEY }}
  DEBUG: true

jobs:
  test:
    name: 🚀 Test & Type Check
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      # ─────────────────────────────────────────────
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      # ─────────────────────────────────────────────
      # 1️⃣ Detectar lockfile y exponerlo como output
      - name: 🔍 Detect lockfile
        id: lockfile
        run: |
          if ls *.lock >/dev/null 2>&1 || [ -f npm-shrinkwrap.json ]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      # ─────────────────────────────────────────────
      # 2️⃣ Setup Node con cache SOLO si hay lockfile
      - name: 🔧 Setup Node.js + cache
        if: steps.lockfile.outputs.found == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      # 3️⃣ Setup Node sin cache (fallback)
      - name: 🔧 Setup Node.js
        if: steps.lockfile.outputs.found == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # ─────────────────────────────────────────────
      - name: 📥 Install dependencies
        run: |
          if [ "${{ steps.lockfile.outputs.found }}" = "true" ]; then
            echo "🟢 Lockfile encontrado → npm ci"
            npm ci
          else
            echo "🟡 Sin lockfile → npm install"
            npm install --no-fund --no-audit
          fi

      # ─────────────────────────────────────────────
      - name: 🔍 Type check
        run: npm run type-check

      - name: 🛡️ Security check
        run: npm run security-check

      - name: 🧪 Run tests
        run: npm run test:run

      - name: 📊 Generate coverage report
        run: npm run test:coverage

      - name: 📈 Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # ────────────────────────────────────────────────
  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    needs: test          # espera a que TODOS los jobs 'test' finalicen

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Detect lockfile
        id: lockfile
        run: |
          if ls *.lock >/dev/null 2>&1 || [ -f npm-shrinkwrap.json ]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: 🔧 Setup Node.js + cache
        if: steps.lockfile.outputs.found == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm

      - name: 🔧 Setup Node.js
        if: steps.lockfile.outputs.found == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: 📥 Install dependencies
        run: |
          if [ "${{ steps.lockfile.outputs.found }}" = "true" ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi

      - name: 🏗️ Build project
        run: npm run build

      - name: ✅ Verify build artifacts
        run: |
          test -f dist/index.js && echo "✅ Build OK" || (echo "❌ Build failed"; exit 1)
